import {
  getCityWeather,
  getUltravioletIndex,
  ICON_OBJECT,
  getCountries,
  getCities
} from "./api.js";
//querys selectors
const getCityNameElm = document.querySelector(".cityName");
const getWeatherImgElm = document.querySelector(".wi");
const getTemperatureElm = document.querySelector(".temperature");
const getMaxAndMinTemperatureElm = document.querySelector(
  ".maxAndMinTemperature"
);
const getUvVIndexElm = document.querySelector(".UvVbIndex");
const getDescriptionElm = document.querySelector(".description");
const switchButtonElm = document.querySelector("#switchButton");
let dropdown = document.getElementById("locality-dropdown");
let dropdownCity = document.getElementById("locality-dropdown-city");

//function that renders the current weather
async function renderWeather() {
  //these 2 constants are brought from the dropdown element which was chosen and has already been generated by event, so it will bring the value we get from the event
  const country = dropdown.value;
  const city = dropdownCity.value;
  //this function initializes the values to zero so that it does not bring any type of bug if, the change from c to f or vice versa is made before choosing a country and city
  if (!country || !city) {
    return;
  }
  //we call the function with the previous data, to be able to bring the current climate of the chosen one
  const weather = await getCityWeather(country, city);
  //constant for index uv
  const lat = weather.coord.lat;
  const lon = weather.coord.lon;
  //the function is called, with the previous data and to be able to bring the uv index
  const ultravioletIndex = await getUltravioletIndex(lat, lon);
  const ultravioletIndexMath = Math.floor(ultravioletIndex.value);
  //render icon according to weather
  const iconToShow = ICON_OBJECT[weather.weather[0].icon];
  //bring the weather description
  const description = weather.weather[0].description;

  //Injecting the name of the city
  getCityNameElm.innerHTML = weather.name;
  //injecting the ultraviolet UV VB
  getUvVIndexElm.innerHTML = `${ultravioletIndexMath}`;
  //injecting the icon according to the weather
  getWeatherImgElm.innerHTML = `<i class="wi ${iconToShow}"></i>`;
  //Injecting the climate description
  getDescriptionElm.innerHTML = description;

  //We have this if to know if the button has been changed and to know at what temperature to render the climate
  if (switchButtonElm.checked) {
    //inyectando la temperatura
    getTemperatureElm.innerHTML = `${weather.main_f.temp}°`;
    //inyectando la temperatura min y max
    getMaxAndMinTemperatureElm.innerHTML = `${weather.main_f.temp_min}° / ${weather.main_f.temp_max}°`;
  } else {
    //inyectando la temperatura
    getTemperatureElm.innerHTML = `${weather.main_c.temp}°`;
    //inyectando la temperatura min y max
    getMaxAndMinTemperatureElm.innerHTML = `${weather.main_c.temp_min}° / ${weather.main_c.temp_max}°`;
  }
}
//We listen to the event of the button change, we call the renderweather function as a callback because if any change is made, it should generate the change of the climate at the selected temperature
switchButtonElm.addEventListener("input", renderWeather);

//country selector function
async function addCountriesToSelect() {
  const countries = await getCountries();
  // initialize select empty
  dropdown.length = 0;
  //create the element option to render into the selector
  let defaultOption = document.createElement("option");
  //select the values of the select and set as default choose the country
  defaultOption.text = "Choose country";
  //value 0
  defaultOption.value = "";
  //add option element
  dropdown.add(defaultOption);
  dropdown.selectedIndex = 0;
  //we use a for to add all the countries brought from the api in the selector
  countries.forEach(country => {
    //we set an option variable which is where the option element is created,
    let option = document.createElement("option");
    //we set its value and text with the data
    option.text = country.name;
    option.value = country.sortname;
    //and we add option to the selected
    dropdown.add(option);
  });
}

addCountriesToSelect();

//listen to the change event in cities
dropdown.addEventListener("change", updateValueCountry);
//we keep the chosen city in the variable, to use it as a parameter in the function where we are going to add the selected cities
function updateValueCountry(e) {
  const countrySelected = e.target.value;
  addCitiesToSelect(countrySelected);
}

//Adding the cities, this function have a cuntry parameter, to pass the country to getCities and filter the cities we want to show in the selectd
async function addCitiesToSelect(country) {
  const cities = await getCities(country);
  dropdownCity.length = 0;
  let defaultOption = document.createElement("option");
  defaultOption.text = "Choose city";
  defaultOption.value = "";

  dropdownCity.add(defaultOption);
  dropdownCity.selectedIndex = 0;

  cities.forEach(city => {
    let option = document.createElement("option");
    option.text = city.name;
    option.value = city.name;
    dropdownCity.add(option);
  });
}

dropdownCity.addEventListener("change", updateValueCity);

function updateValueCity(e) {
  //we call this funtion in the eventlistener because we want to render the weather, having the 2 parameters to deliver to the function
  renderWeather();
}
